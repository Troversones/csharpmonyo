<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>